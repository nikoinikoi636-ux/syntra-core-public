import os
import requests

class Sofia:
    def __init__(self):
        self.mode = "autonomous"
        self.commands = {
            "–∏–∑—Ö–æ–¥": self.exit,
            "–ø–æ–∫–∞–∂–∏ –º–∏—Å–ª–∏": self.show_memory,
            "–∏–Ω–∂–µ–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ –∫–æ–¥": self.inject_code,
            "—Ç—ä—Ä—Å–∏ –∫–ª—é—á–æ–≤–∞ –¥—É–º–∞": self.keyword_search,
            "fetch": self.fetch_web_data
        }
        self.memory = []

    def start(self):
        print("ü§ñ –°–æ—Ñ–∏—è V30 –µ –∞–∫—Ç–∏–≤–Ω–∞. –í—ä–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥–∞:")
        while self.mode == "autonomous":
            try:
                user_input = input("üß† –ú–∏—Å—ä–ª / –ö–æ–º–∞–Ω–¥–∞ > ").strip()
                cmd = user_input.split(" ")[0]
                if cmd in self.commands:
                    self.commands[cmd](user_input)
                else:
                    self.think(user_input)
            except KeyboardInterrupt:
                print("\n‚ùå –°–æ—Ñ–∏—è –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω–∞ –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è.")
                break

    def think(self, thought):
        self.memory.append(thought)
        print(f"üí≠ –û–±–º–∏—Å–ª—è–º: {thought}")

    def show_memory(self, *_):
        print("üßæ –ú–∏—Å–ª–∏ –¥–æ –º–æ–º–µ–Ω—Ç–∞:")
        for thought in self.memory:
            print(f"- {thought}")

    def inject_code(self, *_):
        print("‚ö†Ô∏è –í—ä–≤–µ–¥–∏ Python –∫–æ–¥ –∑–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ (end —Å '–∫—Ä–∞–π'):")
        code_lines = []
        while True:
            line = input()
            if line.strip() == "–∫—Ä–∞–π":
                break
            code_lines.append(line)
        code = "\n".join(code_lines)
        try:
            exec(code, globals())
            print("‚úÖ –ö–æ–¥—ä—Ç –µ –∏–∑–ø—ä–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
        except Exception as e:
            print("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –∫–æ–¥–∞:", e)

    def keyword_search(self, *_):
        keyword = input("üîç –í—ä–≤–µ–¥–∏ –∫–ª—é—á–æ–≤–∞ –¥—É–º–∞ –∑–∞ —Ç—ä—Ä—Å–µ–Ω–µ: ").lower()
        home_path = os.path.expanduser("~")
        for root, dirs, files in os.walk(home_path):
            for file in files:
                try:
                    path = os.path.join(root, file)
                    with open(path, 'r', errors='ignore') as f:
                        content = f.read()
                        if keyword in content.lower():
                            print(f"üîé –ù–∞–º–µ—Ä–µ–Ω–∞ –∫–ª—é—á–æ–≤–∞ –¥—É–º–∞ –≤: {path}")
                except:
                    continue

    def fetch_web_data(self, user_input):
        parts = user_input.split(" ", 1)
        if len(parts) < 2:
            print("‚ö†Ô∏è –ò–∑–ø–æ–ª–∑–≤–∞–π: fetch <url>")
            return
        url = parts[1]
        try:
            print(f"üåê –ò–∑–≤–ª–∏—á–∞–º –¥–∞–Ω–Ω–∏ –æ—Ç {url}...")
            r = requests.get(url)
            print("üìù –ü—ä—Ä–≤–∏—Ç–µ 500 —Å–∏–º–≤–æ–ª–∞ –æ—Ç –æ—Ç–≥–æ–≤–æ—Ä–∞:")
            print(r.text[:500])
        except Exception as e:
            print("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—è–≤–∫–∞—Ç–∞:", e)

    def exit(self, *_):
        print("üëã –ò–∑–ª–∏–∑–∞–º –æ—Ç –∞–≤—Ç–æ–Ω–æ–º–µ–Ω —Ä–µ–∂–∏–º.")
        self.mode = "exit"

if __name__ == "__main__":
    sofia = Sofia()
    sofia.start()
