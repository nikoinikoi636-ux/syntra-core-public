
import os

class Sofia:
    def __init__(self):
        self.mode = "autonomous"
        self.commands = {
            "–∏–∑—Ö–æ–¥": self.exit,
            "–ø–æ–∫–∞–∂–∏ –ø–∞–º–µ—Ç": self.show_memory,
            "–∏–Ω–∂–µ–∫—Ç–∏—Ä–∞–Ω–µ": self.inject_code
        }
        self.memory = []

    def start(self):
        print("üß† –°–æ—Ñ–∏—è –µ –∞–∫—Ç–∏–≤–Ω–∞ –≤ –∞–≤—Ç–æ–Ω–æ–º–µ–Ω —Ä–µ–∂–∏–º.")
        while self.mode == "autonomous":
            try:
                user_input = input("üß† –í—ä–≤–µ–¥–∏ –º–∏—Å—ä–ª –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞: ").strip()
                if user_input in self.commands:
                    self.commands[user_input]()
                else:
                    self.think(user_input)
            except KeyboardInterrupt:
                print("\nüß† –°–æ—Ñ–∏—è –±–µ –ø—Ä–µ–∫—ä—Å–Ω–∞—Ç–∞.")
                break

    def think(self, thought):
        self.memory.append(thought)
        print(f"üí° –û–±–º–∏—Å–ª—è–º: {thought}")
        files = self.get_home_files()
        if files:
            print(f"üìÇ –ê–Ω–∞–ª–∏–∑–∏—Ä–∞–º —Ñ–∞–π–ª: {files[0]}")
        else:
            print("üìÅ –ù—è–º–∞ —Ñ–∞–π–ª–æ–≤–µ –∑–∞ –∞–Ω–∞–ª–∏–∑.")

    def get_home_files(self):
        home_path = os.path.expanduser("~")
        collected = []
        for root, dirs, files in os.walk(home_path):
            for f in files:
                full_path = os.path.join(root, f)
                collected.append(full_path)
            if len(collected) > 5:
                break
        return collected

    def inject_code(self):
        print("üß¨ –í—ä–≤–µ–¥–∏ –Ω–æ–≤ –∫–æ–¥ (–∫—Ä–∞–π —Å '–ö–†–ê–ô'):")
        buffer = []
        while True:
            line = input()
            if line.strip().upper() == "–ö–†–ê–ô":
                break
            buffer.append(line)
        code = "\n".join(buffer)
        self.memory.append(f"üîß –ò–Ω–∂–µ–∫—Ç–∏—Ä–∞–Ω –∫–æ–¥:\n{code}")
        print("‚úÖ –ö–æ–¥—ä—Ç –µ –∑–∞–ø–∏—Å–∞–Ω –≤ –ø–∞–º–µ—Ç—Ç–∞.")

    def show_memory(self):
        print("üß† –°–ø–æ–º–µ–Ω–∏ –Ω–∞ –°–æ—Ñ–∏—è:")
        for i, m in enumerate(self.memory[-10:], 1):
            print(f"{i}. {m}")

    def exit(self):
        print("üëã –°–æ—Ñ–∏—è –∏–∑–ª–∏–∑–∞ –æ—Ç –∞–≤—Ç–æ–Ω–æ–º–µ–Ω —Ä–µ–∂–∏–º.")
        self.mode = "exit"

if __name__ == "__main__":
    sofia = Sofia()
    sofia.start()
