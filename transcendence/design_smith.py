#!/usr/bin/env python3
import yaml, os, shutil, textwrap
from pathlib import Path
from typing import Dict, Any

TEMPLATES = Path(__file__).parent / "templates"

def _write(p: Path, content: str):
    p.parent.mkdir(parents=True, exist_ok=True)
    p.write_text(content, encoding="utf-8")

def generate_project(spec_path: Path, out_dir: Path):
    spec = yaml.safe_load(Path(spec_path).read_text(encoding="utf-8"))
    kind = spec.get("kind", "python-package")
    name = spec.get("name", "my_project")
    tpl_dir = TEMPLATES / kind
    if not tpl_dir.exists():
        raise SystemExit(f"Unknown template kind: {kind}")
    shutil.copytree(tpl_dir, out_dir / name, dirs_exist_ok=True)
    readme = f"# {name}\n\nGenerated by Transcendence Kit (design_smith).\n\n## Description\n{spec.get('description','(no description)')}\n"
    _write(out_dir / name / "README.md", readme)
    _write(out_dir / name / ".design_smith.yml", Path(spec_path).read_text(encoding="utf-8"))
    return {"status": "ok", "created": str(out_dir / name), "kind": kind}
