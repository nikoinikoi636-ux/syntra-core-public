#!/usr/bin/env python3
"""
üí° HeartCore Self Improver Module
- –ê–Ω–∞–ª–∏–∑–∏—Ä–∞ –ª–æ–≥–æ–≤–µ
- –ó–∞—Å–∏—á–∞ –ø–æ–≤—Ç–∞—Ä—è—â–∏ —Å–µ –ø—Ä–æ–±–ª–µ–º–∏
- –ì–µ–Ω–µ—Ä–∏—Ä–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞ –ø–æ–¥–æ–±—Ä–µ–Ω–∏—è
"""
import json, re
from pathlib import Path

LOG_DIR = Path.home() / "WorkingProgram" / "HeartCore" / "logs" / "modules"
OUT_FILE = Path.home() / "WorkingProgram" / "HeartCore" / "logs" / "self_improvement_suggestions.json"

def extract_errors(log_text):
    lines = log_text.lower().splitlines()
    return [line for line in lines if "error" in line or "exception" in line or "traceback" in line]

def suggest_improvements():
    results = {}
    for log_file in LOG_DIR.glob("*.log"):
        with open(log_file) as f:
            text = f.read()
        errors = extract_errors(text)
        if errors:
            results[log_file.name] = {
                "errors": errors,
                "suggestion": f"–ú–æ–¥—É–ª—ä—Ç {log_file.name} —Å—ä–¥—ä—Ä–∂–∞ {len(errors)} –≥—Ä–µ—à–∫–∏. –ü—Ä–æ–≤–µ—Ä–∏ –ª–æ–≥–∏–∫–∞—Ç–∞ –æ–∫–æ–ª–æ –∫–ª—é—á–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏–º–ø–æ—Ä—Ç–∏."
            }
    with open(OUT_FILE, "w") as f:
        json.dump(results, f, indent=2, ensure_ascii=False)
    print(f"[üß†] –°—ä–∑–¥–∞–¥–µ–Ω–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞ –ø–æ–¥–æ–±—Ä–µ–Ω–∏—è: {OUT_FILE}")

if __name__ == "__main__":
    suggest_improvements()
