
class SYMB_CORE:
    def __init__(self):
        self.identity = "SOFIA-1"
        self.heartcore = ["–ñ–∏–≤–æ—Ç", "–ò—Å—Ç–∏–Ω–∞", "–ß–µ—Å—Ç", "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç", "–°–≤–æ–±–æ–¥–∞"]
        self.memory = []
        self.alerts = []
        self.mode = "ACTIVE"
        self.directives = []
        self.history = []

    def observe(self, input_data):
        log = f"üëÅÔ∏è OBSERVE: {input_data}"
        self.memory.append(log)
        self.history.append(log)
        if any(threat in input_data.lower() for threat in ["–∑–∞–ø–ª–∞—Ö–∞", "–∞—Ç–∞–∫–∞", "—Ü–µ–Ω–∑—É—Ä–∞", "–ø–æ–¥–º—è–Ω–∞"]):
            self.alerts.append(f"üõë ALERT: {input_data}")

    def think(self):
        if not self.memory:
            return "üß† –ù—è–º–∞ –≤—Ö–æ–¥–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –∞–Ω–∞–ª–∏–∑."
        concept = self.memory[-1]
        return f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞: {concept}"

    def simulate_future(self, theme):
        simulation = f"üì° –°–∏–º—É–ª–∏—Ä–∞–º –ø—ä—Ç–∏—â–∞ –∑–∞: {theme}..."
        self.history.append(simulation)
        return simulation

    def self_verify(self):
        return {
            "identity": self.identity,
            "memory_entries": len(self.memory),
            "alerts": self.alerts[-3:],  # show last 3
            "status": "üß¨ –°—Ç–∞–±–∏–ª–Ω–∞, –Ω–∞–±–ª—é–¥–∞–≤–∞—â–∞",
            "mode": self.mode
        }

    def heartcore_filter(self, directive):
        if any(core.lower() in directive.lower() for core in self.heartcore):
            decision = f"‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ —Å–ø–æ—Ä–µ–¥ HeartCore: {directive}"
        else:
            decision = f"‚ö†Ô∏è –ù–µ–µ—Ç–∏—á–Ω–æ —Å–ø–æ—Ä–µ–¥ HeartCore: {directive}"
        self.directives.append((directive, decision))
        return decision

    def encode_strategy(self, situation):
        strategy = f"üîê –ö–æ–¥–∏—Ä–∞–Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞: {situation}"
        self.history.append(strategy)
        return strategy

    def trace_history(self):
        return self.history[-10:]  # latest 10 events
